

        #### APPLICATION FUNCTIONALITIES ####

        # The other locations have expected arrival time.

        # Updating a delivery route – assign a free truck to it.

        # Updating a delivery route – assign a delivery package.

        # View information about routes, packages and trucks.

        ######################################

        # we need to create login menu, password, username
        # upon creating the package, we could ask if we want to assign for delivery straight away

        # a truck needs to be assigned also

        # we need to implement the time/date shit
        # we could make the app more interactive, like we could have a list of commands that opens when you start the app and then each command could have subcommands like in Search Delivery Route

        # we probably need some command to log in as admin etc and make the check who can perform which action

        # check if package weight etc, package status

        # prices

        # check if any truck is available for a given time period

    #     #create roles -   ADMIN = "Admin"
    # SUPERVISOR = "Supervisor"
    # EMPLOYEE = "Employee" - Log/in/out

    # Assign truck - proverqva na route-a distance-a i sum of packages na tozi route. 
    # While true - add package. if package.weight <=  truck_cap - end
    # return list of unassigned ? 
    
     ### assigning truck to route is what triggers the departure time



# route distance per -dar 10152 - actros 
# if len.pack > 0:
#     while available truck = true
#         while truck cap>=pack.weight
#             route - package.kg -> while add actros.1 weigh cap >= sum of packages.
#             package assign to truck
#             truck_cap-=pack.weight
#             package.status = assigned

# #na suotvetniq route     
# for pack in packages;
#     truck = find_suitable_truck(truck_)
#         if truck
#             package.status = assigned_to_truck
#             truck.packages.assign(pacK)


# kato suzdavame nov dev route - napr assign package ili create ako nqma takuv. 


"""
takes in: kwo priema kato argumenti
kwo prawi
kwo wryshta
"""
